<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="18" total="75" passed="54" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-30T11:16:38 EST" name="Suite" finished-at="2022-12-30T11:18:33 EST" duration-ms="115354">
    <groups>
    </groups>
    <test started-at="2022-12-30T11:16:38 EST" name="Test" finished-at="2022-12-30T11:18:33 EST" duration-ms="115354">
      <class name="testCases.QueueTest">
        <test-method signature="QueueInPython()[pri:1, instance:testCases.QueueTest@514646ef]" started-at="2022-12-30T11:17:56 EST" name="QueueInPython" finished-at="2022-12-30T11:17:58 EST" duration-ms="2245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueInPython -->
        <test-method signature="QueueCollection()[pri:2, instance:testCases.QueueTest@514646ef]" started-at="2022-12-30T11:17:58 EST" name="QueueCollection" finished-at="2022-12-30T11:17:59 EST" duration-ms="918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueCollection -->
        <test-method signature="QueueImplementation()[pri:3, instance:testCases.QueueTest@514646ef]" started-at="2022-12-30T11:17:59 EST" name="QueueImplementation" finished-at="2022-12-30T11:18:00 EST" duration-ms="957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueImplementation -->
        <test-method signature="QueueOperations()[pri:3, instance:testCases.QueueTest@514646ef]" started-at="2022-12-30T11:18:00 EST" name="QueueOperations" finished-at="2022-12-30T11:18:02 EST" duration-ms="1800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueueOperations -->
        <test-method signature="QueuePracticeQuestions()[pri:3, instance:testCases.QueueTest@514646ef]" started-at="2022-12-30T11:18:02 EST" name="QueuePracticeQuestions" finished-at="2022-12-30T11:18:03 EST" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueuePracticeQuestions -->
      </class> <!-- testCases.QueueTest -->
      <class name="testCases.SigninTest">
        <test-method signature="SigninDDT(java.lang.String,java.lang.String)[pri:0, instance:testCases.SigninTest@6d60fe40]" started-at="2022-12-30T11:16:59 EST" name="SigninDDT" data-provider="signinData" finished-at="2022-12-30T11:17:01 EST" duration-ms="1991" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[abghbgh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ffgg]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testCases.SigninTest.SigninDDT(SigninTest.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SigninDDT -->
        <test-method signature="SigninDDT(java.lang.String,java.lang.String)[pri:0, instance:testCases.SigninTest@6d60fe40]" started-at="2022-12-30T11:17:01 EST" name="SigninDDT" data-provider="signinData" finished-at="2022-12-30T11:17:03 EST" duration-ms="1723" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[svhjj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hjjj]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testCases.SigninTest.SigninDDT(SigninTest.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SigninDDT -->
        <test-method signature="SigninDDT(java.lang.String,java.lang.String)[pri:0, instance:testCases.SigninTest@6d60fe40]" started-at="2022-12-30T11:17:03 EST" name="SigninDDT" data-provider="signinData" finished-at="2022-12-30T11:17:06 EST" duration-ms="3110" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sahana9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user12345]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testCases.SigninTest.SigninDDT(SigninTest.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SigninDDT -->
      </class> <!-- testCases.SigninTest -->
      <class name="testCases.TreeTest">
        <test-method signature="OverviewTree()[pri:1, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:03 EST" name="OverviewTree" finished-at="2022-12-30T11:18:07 EST" duration-ms="3839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OverviewTree -->
        <test-method signature="Terminology()[pri:2, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:07 EST" name="Terminology" finished-at="2022-12-30T11:18:08 EST" duration-ms="1130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Terminology -->
        <test-method signature="TypesofTree()[pri:3, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:08 EST" name="TypesofTree" finished-at="2022-12-30T11:18:09 EST" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TypesofTree -->
        <test-method signature="TreeTraversals()[pri:4, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:09 EST" name="TreeTraversals" finished-at="2022-12-30T11:18:10 EST" duration-ms="1207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TreeTraversals -->
        <test-method signature="TraversalsIllustration()[pri:5, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:10 EST" name="TraversalsIllustration" finished-at="2022-12-30T11:18:12 EST" duration-ms="2074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TraversalsIllustration -->
        <test-method signature="BinaryTree()[pri:6, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:12 EST" name="BinaryTree" finished-at="2022-12-30T11:18:15 EST" duration-ms="2881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BinaryTree -->
        <test-method signature="TypesBinaryTree()[pri:7, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:15 EST" name="TypesBinaryTree" finished-at="2022-12-30T11:18:17 EST" duration-ms="1689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TypesBinaryTree -->
        <test-method signature="ImplementationinPython()[pri:8, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:17 EST" name="ImplementationinPython" finished-at="2022-12-30T11:18:18 EST" duration-ms="1242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementationinPython -->
        <test-method signature="BinaryTreeTraversals()[pri:9, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:18 EST" name="BinaryTreeTraversals" finished-at="2022-12-30T11:18:19 EST" duration-ms="1091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BinaryTreeTraversals -->
        <test-method signature="ImplementationBinaryTrees()[pri:10, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:19 EST" name="ImplementationBinaryTrees" finished-at="2022-12-30T11:18:20 EST" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementationBinaryTrees -->
        <test-method signature="ApplicationsBinaryTree()[pri:11, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:20 EST" name="ApplicationsBinaryTree" finished-at="2022-12-30T11:18:22 EST" duration-ms="2082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationsBinaryTree -->
        <test-method signature="BinarySearchTrees()[pri:12, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:22 EST" name="BinarySearchTrees" finished-at="2022-12-30T11:18:25 EST" duration-ms="2742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BinarySearchTrees -->
        <test-method signature="ImplementationOfBST()[pri:13, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:25 EST" name="ImplementationOfBST" finished-at="2022-12-30T11:18:27 EST" duration-ms="1760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementationOfBST -->
        <test-method signature="PracticeQuestion()[pri:14, instance:testCases.TreeTest@305ffe9e]" started-at="2022-12-30T11:18:27 EST" name="PracticeQuestion" finished-at="2022-12-30T11:18:28 EST" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticeQuestion -->
      </class> <!-- testCases.TreeTest -->
      <class name="testCases.DataStructureTest">
        <test-method signature="DatastructureTimeComplexity()[pri:1, instance:testCases.DataStructureTest@792b749c]" started-at="2022-12-30T11:17:06 EST" name="DatastructureTimeComplexity" finished-at="2022-12-30T11:17:12 EST" duration-ms="5767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DatastructureTimeComplexity -->
        <test-method signature="DataStructurePrecticeQuestion()[pri:2, instance:testCases.DataStructureTest@792b749c]" started-at="2022-12-30T11:17:12 EST" name="DataStructurePrecticeQuestion" finished-at="2022-12-30T11:17:14 EST" duration-ms="2142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DataStructurePrecticeQuestion -->
      </class> <!-- testCases.DataStructureTest -->
      <class name="testCases.RegistrationTest">
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@43df23d3]" started-at="2022-12-30T11:16:53 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2022-12-30T11:16:55 EST" duration-ms="1693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8306]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8306]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ 8306]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@43df23d3]" started-at="2022-12-30T11:16:55 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2022-12-30T11:16:56 EST" duration-ms="786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zee9142]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[  9142]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9142]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@43df23d3]" started-at="2022-12-30T11:16:56 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2022-12-30T11:16:56 EST" duration-ms="663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zenny2719]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc1232719]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2719]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@43df23d3]" started-at="2022-12-30T11:16:56 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2022-12-30T11:16:57 EST" duration-ms="907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rose6722]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[try123456722]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[try1236722]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@43df23d3]" started-at="2022-12-30T11:16:57 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2022-12-30T11:16:58 EST" duration-ms="587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mily329]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ab329]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ab329]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="RegistrationDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.RegistrationTest@43df23d3]" started-at="2022-12-30T11:16:58 EST" name="RegistrationDDT" data-provider="RegistrationData" finished-at="2022-12-30T11:16:59 EST" duration-ms="1093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sahana95376]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user123455376]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[user123455376]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationDDT -->
        <test-method signature="sighOutOnRegistrationPage()[pri:1, instance:testCases.RegistrationTest@43df23d3]" started-at="2022-12-30T11:16:59 EST" name="sighOutOnRegistrationPage" finished-at="2022-12-30T11:16:59 EST" duration-ms="378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sighOutOnRegistrationPage -->
      </class> <!-- testCases.RegistrationTest -->
      <class name="testCases.ArrayTest">
        <test-method signature="Arrayslogin()[pri:1, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:14 EST" name="Arrayslogin" finished-at="2022-12-30T11:17:17 EST" duration-ms="2301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Arrayslogin -->
        <test-method signature="ArraysPython()[pri:2, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:17 EST" name="ArraysPython" finished-at="2022-12-30T11:17:19 EST" duration-ms="1950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArraysPython -->
        <test-method signature="ArraysList()[pri:3, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:19 EST" name="ArraysList" finished-at="2022-12-30T11:17:20 EST" duration-ms="1368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArraysList -->
        <test-method signature="BasicOperation()[pri:4, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:20 EST" name="BasicOperation" finished-at="2022-12-30T11:17:23 EST" duration-ms="3255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BasicOperation -->
        <test-method signature="ApplicationOfArrays()[pri:5, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:23 EST" name="ApplicationOfArrays" finished-at="2022-12-30T11:17:25 EST" duration-ms="1891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationOfArrays -->
        <test-method signature="PracticeQuestion()[pri:6, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:25 EST" name="PracticeQuestion" finished-at="2022-12-30T11:17:26 EST" duration-ms="1205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticeQuestion -->
        <test-method signature="MaxConsecutive()[pri:7, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:26 EST" name="MaxConsecutive" finished-at="2022-12-30T11:17:27 EST" duration-ms="1197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MaxConsecutive -->
        <test-method signature="FindNumber()[pri:8, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:27 EST" name="FindNumber" finished-at="2022-12-30T11:17:29 EST" duration-ms="1084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindNumber -->
        <test-method signature="ShortedArrays()[pri:9, instance:testCases.ArrayTest@23e84203]" started-at="2022-12-30T11:17:29 EST" name="ShortedArrays" finished-at="2022-12-30T11:17:30 EST" duration-ms="1253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShortedArrays -->
      </class> <!-- testCases.ArrayTest -->
      <class name="testCases.GraphTest">
        <test-method signature="GraphPage()[pri:1, instance:testCases.GraphTest@302c971f]" started-at="2022-12-30T11:18:28 EST" name="GraphPage" finished-at="2022-12-30T11:18:30 EST" duration-ms="1945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GraphPage -->
        <test-method signature="GraphRepresentations()[pri:2, instance:testCases.GraphTest@302c971f]" started-at="2022-12-30T11:18:30 EST" name="GraphRepresentations" finished-at="2022-12-30T11:18:31 EST" duration-ms="1688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GraphRepresentations -->
        <test-method signature="Graph()[pri:3, instance:testCases.GraphTest@302c971f]" started-at="2022-12-30T11:18:31 EST" name="Graph" finished-at="2022-12-30T11:18:33 EST" duration-ms="1274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Graph -->
      </class> <!-- testCases.GraphTest -->
      <class name="testCases.StackTest">
        <test-method signature="StackOperations()[pri:1, instance:testCases.StackTest@73eb439a]" started-at="2022-12-30T11:17:45 EST" name="StackOperations" finished-at="2022-12-30T11:17:50 EST" duration-ms="4321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackOperations -->
        <test-method signature="StackApplications()[pri:2, instance:testCases.StackTest@73eb439a]" started-at="2022-12-30T11:17:50 EST" name="StackApplications" finished-at="2022-12-30T11:17:52 EST" duration-ms="1940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackApplications -->
        <test-method signature="StackImplementation()[pri:2, instance:testCases.StackTest@73eb439a]" started-at="2022-12-30T11:17:52 EST" name="StackImplementation" finished-at="2022-12-30T11:17:55 EST" duration-ms="2953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackImplementation -->
        <test-method signature="StackPracticeQuestion()[pri:3, instance:testCases.StackTest@73eb439a]" started-at="2022-12-30T11:17:55 EST" name="StackPracticeQuestion" finished-at="2022-12-30T11:17:56 EST" duration-ms="1179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StackPracticeQuestion -->
      </class> <!-- testCases.StackTest -->
      <class name="testCases.LinkedListTest">
        <test-method signature="LinledSignIn()[pri:0, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:30 EST" name="LinledSignIn" finished-at="2022-12-30T11:17:33 EST" duration-ms="2854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinledSignIn -->
        <test-method signature="introductionLinkListed()[pri:1, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:33 EST" name="introductionLinkListed" finished-at="2022-12-30T11:17:35 EST" duration-ms="2214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- introductionLinkListed -->
        <test-method signature="CreatedLinkedListedPage()[pri:2, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:35 EST" name="CreatedLinkedListedPage" finished-at="2022-12-30T11:17:36 EST" duration-ms="1190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreatedLinkedListedPage -->
        <test-method signature="TypeOfLinkedListedPage()[pri:3, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:36 EST" name="TypeOfLinkedListedPage" finished-at="2022-12-30T11:17:37 EST" duration-ms="1269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TypeOfLinkedListedPage -->
        <test-method signature="ImplementLinkedListedPython()[pri:4, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:37 EST" name="ImplementLinkedListedPython" finished-at="2022-12-30T11:17:39 EST" duration-ms="1124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ImplementLinkedListedPython -->
        <test-method signature="TraversalLinkedListedPython()[pri:5, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:39 EST" name="TraversalLinkedListedPython" finished-at="2022-12-30T11:17:39 EST" duration-ms="931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TraversalLinkedListedPython -->
        <test-method signature="InsertaionLinkedListedPython()[pri:6, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:39 EST" name="InsertaionLinkedListedPython" finished-at="2022-12-30T11:17:41 EST" duration-ms="1994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InsertaionLinkedListedPython -->
        <test-method signature="DeletionLinkedListedPython()[pri:7, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:41 EST" name="DeletionLinkedListedPython" finished-at="2022-12-30T11:17:44 EST" duration-ms="2523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeletionLinkedListedPython -->
        <test-method signature="PracticeQuastionLinkedListedPython()[pri:8, instance:testCases.LinkedListTest@19932c16]" started-at="2022-12-30T11:17:44 EST" name="PracticeQuastionLinkedListedPython" finished-at="2022-12-30T11:17:45 EST" duration-ms="1307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticeQuastionLinkedListedPython -->
      </class> <!-- testCases.LinkedListTest -->
      <class name="testCases.HomePageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:testCases.HomePageTest@1033576a]" started-at="2022-12-30T11:16:38 EST" name="setup" finished-at="2022-12-30T11:16:46 EST" duration-ms="7899" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homepage()[pri:0, instance:testCases.HomePageTest@1033576a]" started-at="2022-12-30T11:16:46 EST" name="homepage" finished-at="2022-12-30T11:16:49 EST" duration-ms="2272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homepage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.HomePageTest@1033576a]" started-at="2022-12-30T11:18:33 EST" name="tearDown" finished-at="2022-12-30T11:18:33 EST" duration-ms="862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.HomePageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
